Logic
- User first sign up with their e-mail address and newly-created password
- Choose the city they want to live in
    - with API, there should be a drop-down menu listing all the cities of USA listed
    - In the back-end, use API to calculate the cost of living for that city(without counting in rent), store it
- Choose their monthly salary range
    - probably sth. like (0-2.5k, 2.5k-5k, 5k-10k, 10k-3k, 3k+)
    - Compare the salary to the cost of living calculated before
        - if salary <= cost of living, display some message like “it might not be a good idea to live in this city”
        - if salary > cost of living, go to the next step
- Choose the county they wanna look like
    - based on the city the user chooses, list all the counties of that city with a drop-down menu
- Choose the room layout
    - number of bedrooms, number of bathrooms
- (All for back end)
    - Calculate Max(salary range) - Cost of living = Max(rent price) (Eg. If user chooses 2.5K-5K and cost of living is 1.5K, then 5K - 1.5K = 3.5K)
    - Based on the county, room layout, maximum rent price, from API, fetch all the listings from that county, store each as (address, rent price)
    - For each listing:
        - Using Google Places API(maybe), based on the listing address, find the nearest grocery stores, store the (grocery store name, distance, store address)
        - Using Google Map Platform - Directions API(maybe), find the nearby public transportation stops based on the listing address, store (public transportation type(bus/T), stop name, distance from listing address)
    - By default, show the listings filter by address name (A-Z)
        - Probably at most 10 listings/page
        - For each result, there should be:
            - Address of the listing
            - Rent Price
            - Nearest grocery name, distance to that
            - Nearest public transportation, distance to that
    - Offer user with the choices to filter by nearby grocery, nearest public transportation, cheapest rent price
        - Filter by grocery: compare the min(distance) between listing address and grocery, show the top 10
        - Filter by nearest transportation: compare the min(distance) between listing address and public transportation, show the top 10
        - Filter by cheapest rent price: compare rent price, show the top 10
